{"remainingRequest":"/home/subseo/Projects/P2020/IngaGridsome/node_modules/babel-loader/lib/index.js??ref--1-1!/home/subseo/Projects/P2020/IngaGridsome/node_modules/gridsome/app/app.js","dependencies":[{"path":"/home/subseo/Projects/P2020/IngaGridsome/node_modules/gridsome/app/app.js","mtime":499162500000},{"path":"/home/subseo/Projects/P2020/IngaGridsome/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/subseo/Projects/P2020/IngaGridsome/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport plugins from '~/.temp/plugins-server';\nimport main from '~/main';\nimport App from '~/App.vue';\nimport head from \"./head\";\nimport router from \"./router\";\nimport fetchPath from \"./fetchPath\";\nimport { url } from \"./utils/helpers\";\nimport graphqlGuard from \"./graphql/guard\";\nimport graphqlMixin from \"./graphql/mixin\";\nimport Link from \"./components/Link\";\nimport Image from \"./components/Image\";\nimport ClientOnly from \"./components/ClientOnly\";\nVue.mixin(graphqlMixin);\nVue.component('g-link', Link);\nVue.component('g-image', Image);\nVue.component('ClientOnly', ClientOnly);\nVue.prototype.$url = url;\nVue.prototype.$fetch = fetchPath;\nrouter.beforeEach(graphqlGuard);\nvar context = {\n  appOptions: {\n    render: function render(h) {\n      return h(App, {\n        attrs: {\n          id: 'app'\n        }\n      });\n    },\n    metaInfo: head,\n    methods: {},\n    data: {},\n    router: router\n  },\n  isServer: process.isServer,\n  isClient: process.isClient,\n  router: router,\n  head: head\n};\nrunPlugins(plugins);\nexport function runPlugins(plugins) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _step$value = _step.value,\n          run = _step$value.run,\n          options = _step$value.options;\n\n      if (typeof run === 'function') {\n        run(Vue, options, context);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\nexport function runMain() {\n  if (typeof main === 'function') {\n    main(Vue, context);\n  }\n}\nexport default function createApp() {\n  return {\n    app: new Vue(context.appOptions),\n    router: router\n  };\n}",null]}